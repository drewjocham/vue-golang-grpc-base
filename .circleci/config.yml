# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
    kubernetes: circleci/kubernetes@1.3.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  api:
    working_directory: ~/api
    docker:
      - image: cimg/go:1.19
    steps:
        - checkout:
              path: ~/api
        -   setup_remote_docker: # (2)
                docker_layer_caching: true # (3)
        -   run:
                name: Go install, vendor, tidy, download
                command: cd api && go get -v -t -d ./...
        -   run:
                name: Go build
                command: cd api && go build -o main .
        -   deploy:
                command: |
                    if [ "${CIRCLE_BRANCH}" == "main" ]; then
                      cd api && docker build -t drewjocham/api:${CIRCLE_SHA1} .
                      docker login -u ${DOCKER_USER} -p ${DOCKER_PASS} https://index.docker.io/v1/
                      docker push drewjocham/api:${CIRCLE_SHA1}
                      docker tag drewjocham/api:${CIRCLE_SHA1} drewjocham/api:latest
                      docker push drewjocham/api:latest
                    fi
  client:
    working_directory: ~/client
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/node:16.18.1
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
        - checkout:
              path: ~/client
        -   setup_remote_docker: # (2)
                docker_layer_caching: true # (3)
        - run:
              name: Install Dependencies
              command: cd client && yarn install --immutable
        -   run:
              name: Build Client
              command: cd client && yarn build
        -   deploy:
                command: |
                    if [ "${CIRCLE_BRANCH}" == "deploy_over_ssh" ]; then
                      cd client && docker build -t drewjocham/client:${CIRCLE_SHA1} .
                      docker login -u ${DOCKER_USER} -p ${DOCKER_PASS} https://index.docker.io/v1/
                      docker push drewjocham/client:${CIRCLE_SHA1}
                      docker tag drewjocham/client:${CIRCLE_SHA1} drewjocham/client:latest
                      docker push drewjocham/client:latest
                    fi
    kube_deploy_client:
        # Update the existing Kubernetes deployment to point to the new image
        docker:
           #-   image: google/cloud-sdk:alpine
            - image: bitnami/kubectl
        working_directory: ~/repo
        steps:
            -   run:
                    name: Deploy the current commit on this branch to the GKE cluster
                    command: |
                        gcloud components install kubectl
                        echo "${GKE_CD_SERVICE_ACCOUNT_KEY}" > .key.json
                        gcloud auth activate-service-account --key-file .key.json
                        gcloud config set compute/zone "${GKE_ZONE}"
                        gcloud config set project "${GKE_PROJECT}"
                        gcloud container clusters get-credentials "${GKE_CLUSTER}" --zone "${GKE_ZONE}"
                        if [ "${CIRCLE_BRANCH}" == "add_go_middleware" ]; then
                            DEPLOYMENT_PREFIX="production"
                        else
                            DEPLOYMENT_PREFIX="staging"
                        fi
                        kubectl set image deployment/${DEPLOYMENT_PREFIX}-app ${DEPLOYMENT_PREFIX}-app=gcr.io/${GCR_PROJECT}/myapp:${CIRCLE_SHA1}
    kube_deploy_api:
        # Update the existing Kubernetes deployment to point to the new image
        docker:
            # -   image: google/cloud-sdk:alpine
             - image: bitnami/kubectl
        working_directory: ~/repo
        steps:
            -   run:
                    name: Deploy the current commit on this branch to the GKE cluster
                    command: |
                        gcloud components install kubectl
                        echo "${GKE_CD_SERVICE_ACCOUNT_KEY}" > .key.json
                        gcloud auth activate-service-account --key-file .key.json
                        gcloud config set compute/zone "${GKE_ZONE}"
                        gcloud config set project "${GKE_PROJECT}"
                        gcloud container clusters get-credentials "${GKE_CLUSTER}" --zone "${GKE_ZONE}"
                        if [ "${CIRCLE_BRANCH}" == "add_go_middleware" ]; then
                            DEPLOYMENT_PREFIX="production"
                        else
                            DEPLOYMENT_PREFIX="staging"
                        fi
                        kubectl set image deployment/${DEPLOYMENT_PREFIX}-app ${DEPLOYMENT_PREFIX}-app=gcr.io/${GCR_PROJECT}/myapp:${CIRCLE_SHA1}
# kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1
workflows:
    hobby-project-setup:
        jobs:
        - client:
            context: docker # env context name
        - api:
            context: docker
        - kube_deploy_api:
                context: stackIT
        - kube_deploy_client:
                context: stackIT

