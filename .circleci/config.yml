# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  api:
    docker:
      - image: golang:1.19.3-alpine3.16
    steps:
        - checkout
        -   setup_remote_docker: # (2)
                docker_layer_caching: true # (3)

        # specify any bash command here prefixed with `run: `
        -   run: make mod-vendor
        -   run: cd api && go get -v -t -d ./...
        -   run: cd api && go test -v ./...
        -   run: cd api && go build -o main .
        -   deploy:
                command: |
                    if [ "${CIRCLE_BRANCH}" == "circle-ci-setup" ]; then
                      docker build -t ${DOCKER_REPO} .
                      docker login -u ${DOCKER_USER} -p ${DOCKER_PASS} https://index.docker.io/v1/
                      docker push ${DOCKER_REPO}
                    fi
  client:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: nginx:1.21.3-alpine
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
        - checkout
        -   run: |
                    curl -o- -L https://yarnpkg.com/install.sh | bash
                    echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
        -   run:
                name: Installing the package.json dependencies
                command: cd client && yarn

        # run build!
        -   run: make build-client
        -   persist_to_workspace:
                root: .
                paths: dist

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - client
      - api
